package USML.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum ConcurrencyEnum {
  SINGLE("SINGLE", 0),
  MANY("MANY", 1);

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return "" + this.myValue;
  }

  public static List<ConcurrencyEnum> getConstants() {
    List<ConcurrencyEnum> list = ListSequence.fromList(new LinkedList<ConcurrencyEnum>());
    ListSequence.fromList(list).addElement(ConcurrencyEnum.SINGLE);
    ListSequence.fromList(list).addElement(ConcurrencyEnum.MANY);
    return list;
  }

  public static ConcurrencyEnum getDefault() {
    return ConcurrencyEnum.SINGLE;
  }

  public static ConcurrencyEnum parseValue(String value) {
    if (value == null) {
      return ConcurrencyEnum.getDefault();
    }
    if (value.equals(ConcurrencyEnum.SINGLE.getValueAsString())) {
      return ConcurrencyEnum.SINGLE;
    }
    if (value.equals(ConcurrencyEnum.MANY.getValueAsString())) {
      return ConcurrencyEnum.MANY;
    }
    return ConcurrencyEnum.getDefault();
  }

  private int myValue;

  ConcurrencyEnum(String name, int value) {
    this.myName = name;
    this.myValue = value;
  }

  public int getValue() {
    return this.myValue;
  }
}
