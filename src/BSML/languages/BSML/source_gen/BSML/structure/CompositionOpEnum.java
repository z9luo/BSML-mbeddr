package BSML.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum CompositionOpEnum {
  interleaving("interleaving", 0),
  parallel("parallel", 1),
  sequence("sequence", 2),
  choice("choice", 3),
  interrupt("interrupt", 4),
  environmental_sync("environmental sync", 5),
  rendezvous("rendezvous", 6);

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return "" + this.myValue;
  }

  public static List<CompositionOpEnum> getConstants() {
    List<CompositionOpEnum> list = ListSequence.fromList(new LinkedList<CompositionOpEnum>());
    ListSequence.fromList(list).addElement(CompositionOpEnum.interleaving);
    ListSequence.fromList(list).addElement(CompositionOpEnum.parallel);
    ListSequence.fromList(list).addElement(CompositionOpEnum.sequence);
    ListSequence.fromList(list).addElement(CompositionOpEnum.choice);
    ListSequence.fromList(list).addElement(CompositionOpEnum.interrupt);
    ListSequence.fromList(list).addElement(CompositionOpEnum.environmental_sync);
    ListSequence.fromList(list).addElement(CompositionOpEnum.rendezvous);
    return list;
  }

  public static CompositionOpEnum getDefault() {
    return CompositionOpEnum.interleaving;
  }

  public static CompositionOpEnum parseValue(String value) {
    if (value == null) {
      return CompositionOpEnum.getDefault();
    }
    if (value.equals(CompositionOpEnum.interleaving.getValueAsString())) {
      return CompositionOpEnum.interleaving;
    }
    if (value.equals(CompositionOpEnum.parallel.getValueAsString())) {
      return CompositionOpEnum.parallel;
    }
    if (value.equals(CompositionOpEnum.sequence.getValueAsString())) {
      return CompositionOpEnum.sequence;
    }
    if (value.equals(CompositionOpEnum.choice.getValueAsString())) {
      return CompositionOpEnum.choice;
    }
    if (value.equals(CompositionOpEnum.interrupt.getValueAsString())) {
      return CompositionOpEnum.interrupt;
    }
    if (value.equals(CompositionOpEnum.environmental_sync.getValueAsString())) {
      return CompositionOpEnum.environmental_sync;
    }
    if (value.equals(CompositionOpEnum.rendezvous.getValueAsString())) {
      return CompositionOpEnum.rendezvous;
    }
    return CompositionOpEnum.getDefault();
  }

  private int myValue;

  CompositionOpEnum(String name, int value) {
    this.myName = name;
    this.myValue = value;
  }

  public int getValue() {
    return this.myValue;
  }
}
