package BSML.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum PreemptionEnum {
  PREEMPTIVE("PREEMPTIVE", 0),
  NON_PREEMPTIVE("NON-PREEMPTIVE", 1);

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return "" + this.myValue;
  }

  public static List<PreemptionEnum> getConstants() {
    List<PreemptionEnum> list = ListSequence.fromList(new LinkedList<PreemptionEnum>());
    ListSequence.fromList(list).addElement(PreemptionEnum.PREEMPTIVE);
    ListSequence.fromList(list).addElement(PreemptionEnum.NON_PREEMPTIVE);
    return list;
  }

  public static PreemptionEnum getDefault() {
    return PreemptionEnum.PREEMPTIVE;
  }

  public static PreemptionEnum parseValue(String value) {
    if (value == null) {
      return PreemptionEnum.getDefault();
    }
    if (value.equals(PreemptionEnum.PREEMPTIVE.getValueAsString())) {
      return PreemptionEnum.PREEMPTIVE;
    }
    if (value.equals(PreemptionEnum.NON_PREEMPTIVE.getValueAsString())) {
      return PreemptionEnum.NON_PREEMPTIVE;
    }
    return PreemptionEnum.getDefault();
  }

  private int myValue;

  PreemptionEnum(String name, int value) {
    this.myName = name;
    this.myValue = value;
  }

  public int getValue() {
    return this.myValue;
  }
}
